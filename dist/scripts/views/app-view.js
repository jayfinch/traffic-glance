define(["require","backbone","lodash","dustc!../templates/app","../models/config-model","../models/route-model","./route-view","moment"],function(e){var n=e("backbone"),t=e("lodash"),i=e("dustc!../templates/app"),o=e("../models/config-model"),s=e("../models/route-model"),r=e("./route-view"),l=e("moment"),a=n.View.extend({relevantViews:[],nonRelevantViews:[],configModel:null,initialize:function(){this.configModel=o.instance(),this.listenTo(this.configModel,"change",this.onModelChange)},events:{"click .refresh-all":"onClickRefreshAll"},render:function(){return this.$el.html(i.renderSync()),this},renderRoutes:function(){var e=this,n=this.configModel.routes();this.$("#routes").empty(),t.each(n,function(n){t.extend(n,{units:e.configModel.get("units")});var i=new r({model:new s(n)}),o=e.autoLoad(n)?e.relevantViews:e.nonRelevantViews;o.push(i),e.renderChildViews(e.relevantViews,!0),e.renderChildViews(e.nonRelevantViews,!1)})},renderChildViews:function(e,n){var i=this.$("#routes");t.each(e,function(e){e.render().then(function(){i.append(e.el),n&&e.updateRouteWithTraffic()}).done()})},onModelChange:function(){this.renderRoutes()},onClickRefreshAll:function(e){e.preventDefault(),t.each(this.relevantViews,function(e){e.updateRouteWithTraffic()}),t.each(this.nonRelevantViews,function(e){e.updateRouteWithTraffic()})},bootstrap:function(){this.configModel.fetch()},autoLoad:function(e){var n=l(),t=n.isAfter(l(e.startTime,"h:mm a")),i=n.isBefore(l(e.endTime,"h:mm a"));return t&&i?!0:!1}});return a});
//# sourceMappingURL=app-view.js.map